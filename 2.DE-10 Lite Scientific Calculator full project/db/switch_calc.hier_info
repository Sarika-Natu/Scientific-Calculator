|switch_calc
num[0] => num[0].IN1
num[1] => num[1].IN1
num[2] => num[2].IN1
num[3] => num[3].IN1
done => done.IN1
mode => mode.IN1
op[0] => op[0].IN1
op[1] => op[1].IN1
result[0] << result[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] << result[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] << result[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] << result[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] << result[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] << result[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] << result[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] << result[7].DB_MAX_OUTPUT_PORT_TYPE
CLK => CLK.IN1
reset => reset.IN1
mode_test << calcmod.DB_MAX_OUTPUT_PORT_TYPE
display_seg[0] << segment_display:s1.display_seg
display_seg[1] << segment_display:s1.display_seg
display_seg[2] << segment_display:s1.display_seg
display_seg[3] << segment_display:s1.display_seg
display_seg[4] << segment_display:s1.display_seg
display_seg[5] << segment_display:s1.display_seg
display_seg[6] << segment_display:s1.display_seg
display_seg[7] << segment_display:s1.display_seg
display_seg[8] << segment_display:s1.display_seg
display_seg[9] << segment_display:s1.display_seg
display_seg[10] << segment_display:s1.display_seg
display_seg[11] << segment_display:s1.display_seg
display_seg[12] << segment_display:s1.display_seg
display_seg[13] << segment_display:s1.display_seg
display_seg[14] << segment_display:s1.display_seg
display_seg[15] << segment_display:s1.display_seg
display_seg[16] << segment_display:s1.display_seg
display_seg[17] << segment_display:s1.display_seg
display_seg[18] << segment_display:s1.display_seg
display_seg[19] << segment_display:s1.display_seg
display_seg[20] << segment_display:s1.display_seg
display_seg[21] << segment_display:s1.display_seg
display_seg[22] << segment_display:s1.display_seg
display_seg[23] << segment_display:s1.display_seg
display_seg[24] << segment_display:s1.display_seg
display_seg[25] << segment_display:s1.display_seg
display_seg[26] << segment_display:s1.display_seg
display_seg[27] << segment_display:s1.display_seg
bin[0] << input_calc:i1.bin
bin[1] << input_calc:i1.bin
bin[2] << input_calc:i1.bin
bin[3] << input_calc:i1.bin
bin[4] << input_calc:i1.bin
bin[5] << input_calc:i1.bin
bin[6] << input_calc:i1.bin
bin[7] << input_calc:i1.bin
state[0] << state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] << state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] << state[2].DB_MAX_OUTPUT_PORT_TYPE


|switch_calc|input_calc:i1
operand1[0] <= operand1[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand1[1] <= operand1[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand1[2] <= operand1[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand1[3] <= operand1[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand2[0] <= operand2[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand2[1] <= operand2[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand2[2] <= operand2[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
operand2[3] <= operand2[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
md_operator[0] <= md_operator[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
md_operator[1] <= md_operator[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
md_operator[2] <= md_operator[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
sof_reset <= reset.DB_MAX_OUTPUT_PORT_TYPE
reset => comb.IN1
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => bin.OUTPUTSELECT
reset => show_res.IN1
reset => md_operator[1]$latch.ACLR
reset => md_operator[0]$latch.ACLR
reset => md_operator[2]$latch.ACLR
reset => operand2[0]$latch.ACLR
reset => operand2[1]$latch.ACLR
reset => operand2[2]$latch.ACLR
reset => operand2[3]$latch.ACLR
reset => operand1[0]$latch.ACLR
reset => operand1[1]$latch.ACLR
reset => operand1[2]$latch.ACLR
reset => operand1[3]$latch.ACLR
reset => comb.IN1
reset => sof_reset.DATAIN
num[0] => Mux3.IN4
num[0] => Mux3.IN5
num[0] => Mux11.IN7
num[0] => Mux7.IN7
num[1] => Mux2.IN4
num[1] => Mux2.IN5
num[1] => Mux10.IN7
num[1] => Mux6.IN7
num[2] => Mux1.IN4
num[2] => Mux1.IN5
num[2] => Mux9.IN7
num[2] => Mux5.IN7
num[3] => Mux0.IN5
num[3] => Mux0.IN6
num[3] => Mux8.IN7
num[3] => Mux4.IN7
done => state.OUTPUTSELECT
done => state.OUTPUTSELECT
done => state.OUTPUTSELECT
mode => Mux1.IN6
mode => Mux12.IN7
mode => calcmod.DATAIN
op[0] => Mux3.IN6
op[0] => Mux14.IN7
op[1] => Mux2.IN6
op[1] => Mux13.IN7
calcmod <= mode.DB_MAX_OUTPUT_PORT_TYPE
clock_out_1s => state[0]~reg0.CLK
clock_out_1s => state[1]~reg0.CLK
clock_out_1s => state[2]~reg0.CLK
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
show_res <= show_res$latch.DB_MAX_OUTPUT_PORT_TYPE
bin[0] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[1] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[2] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[3] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[4] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[5] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[6] <= bin.DB_MAX_OUTPUT_PORT_TYPE
bin[7] <= bin.DB_MAX_OUTPUT_PORT_TYPE
result[0] => Mux3.IN7
result[1] => Mux2.IN7
result[2] => Mux1.IN7
result[3] => Mux0.IN7
result[4] => bin.DATAB
result[5] => bin.DATAB
result[6] => bin.DATAB
result[7] => bin.DATAB


|switch_calc|calc_fsm:f1
operand1[0] => Add0.IN4
operand1[0] => Add1.IN8
operand1[0] => Mult0.IN3
operand1[0] => Div0.IN3
operand1[0] => Mod0.IN3
operand1[0] => Mult1.IN6
operand1[0] => Mult1.IN7
operand1[0] => LessThan0.IN8
operand1[0] => LessThan1.IN8
operand1[0] => LessThan2.IN8
operand1[0] => LessThan3.IN8
operand1[0] => LessThan4.IN8
operand1[0] => LessThan5.IN8
operand1[0] => LessThan6.IN8
operand1[0] => LessThan7.IN8
operand1[0] => LessThan8.IN8
operand1[0] => LessThan9.IN8
operand1[0] => LessThan10.IN8
operand1[0] => LessThan11.IN8
operand1[0] => LessThan12.IN8
operand1[0] => LessThan13.IN8
operand1[0] => LessThan14.IN8
operand1[1] => Add0.IN3
operand1[1] => Add1.IN7
operand1[1] => Mult0.IN2
operand1[1] => Div0.IN2
operand1[1] => Mod0.IN2
operand1[1] => Mult1.IN4
operand1[1] => Mult1.IN5
operand1[1] => LessThan0.IN7
operand1[1] => LessThan1.IN7
operand1[1] => LessThan2.IN7
operand1[1] => LessThan3.IN7
operand1[1] => LessThan4.IN7
operand1[1] => LessThan5.IN7
operand1[1] => LessThan6.IN7
operand1[1] => LessThan7.IN7
operand1[1] => LessThan8.IN7
operand1[1] => LessThan9.IN7
operand1[1] => LessThan10.IN7
operand1[1] => LessThan11.IN7
operand1[1] => LessThan12.IN7
operand1[1] => LessThan13.IN7
operand1[1] => LessThan14.IN7
operand1[2] => Add0.IN2
operand1[2] => Add1.IN6
operand1[2] => Mult0.IN1
operand1[2] => Div0.IN1
operand1[2] => Mod0.IN1
operand1[2] => Mult1.IN2
operand1[2] => Mult1.IN3
operand1[2] => LessThan0.IN6
operand1[2] => LessThan1.IN6
operand1[2] => LessThan2.IN6
operand1[2] => LessThan3.IN6
operand1[2] => LessThan4.IN6
operand1[2] => LessThan5.IN6
operand1[2] => LessThan6.IN6
operand1[2] => LessThan7.IN6
operand1[2] => LessThan8.IN6
operand1[2] => LessThan9.IN6
operand1[2] => LessThan10.IN6
operand1[2] => LessThan11.IN6
operand1[2] => LessThan12.IN6
operand1[2] => LessThan13.IN6
operand1[2] => LessThan14.IN6
operand1[3] => Add0.IN1
operand1[3] => Add1.IN5
operand1[3] => Mult0.IN0
operand1[3] => Div0.IN0
operand1[3] => Mod0.IN0
operand1[3] => Mult1.IN0
operand1[3] => Mult1.IN1
operand1[3] => LessThan0.IN5
operand1[3] => LessThan1.IN5
operand1[3] => LessThan2.IN5
operand1[3] => LessThan3.IN5
operand1[3] => LessThan4.IN5
operand1[3] => LessThan5.IN5
operand1[3] => LessThan6.IN5
operand1[3] => LessThan7.IN5
operand1[3] => LessThan8.IN5
operand1[3] => LessThan9.IN5
operand1[3] => LessThan10.IN5
operand1[3] => LessThan11.IN5
operand1[3] => LessThan12.IN5
operand1[3] => LessThan13.IN5
operand1[3] => LessThan14.IN5
operand2[0] => Add0.IN8
operand2[0] => Mult0.IN7
operand2[0] => Div0.IN7
operand2[0] => Mod0.IN7
operand2[0] => Add1.IN4
operand2[1] => Add0.IN7
operand2[1] => Mult0.IN6
operand2[1] => Div0.IN6
operand2[1] => Mod0.IN6
operand2[1] => Add1.IN3
operand2[2] => Add0.IN6
operand2[2] => Mult0.IN5
operand2[2] => Div0.IN5
operand2[2] => Mod0.IN5
operand2[2] => Add1.IN2
operand2[3] => Add0.IN5
operand2[3] => Mult0.IN4
operand2[3] => Div0.IN4
operand2[3] => Mod0.IN4
operand2[3] => Add1.IN1
md_operator[0] => Mux0.IN10
md_operator[0] => Mux1.IN10
md_operator[0] => Mux2.IN10
md_operator[0] => Mux3.IN10
md_operator[0] => Mux4.IN10
md_operator[0] => Mux5.IN10
md_operator[0] => Mux6.IN10
md_operator[0] => Mux7.IN10
md_operator[1] => Mux0.IN9
md_operator[1] => Mux1.IN9
md_operator[1] => Mux2.IN9
md_operator[1] => Mux3.IN9
md_operator[1] => Mux4.IN9
md_operator[1] => Mux5.IN9
md_operator[1] => Mux6.IN9
md_operator[1] => Mux7.IN9
md_operator[2] => Mux0.IN8
md_operator[2] => Mux1.IN8
md_operator[2] => Mux2.IN8
md_operator[2] => Mux3.IN8
md_operator[2] => Mux4.IN8
md_operator[2] => Mux5.IN8
md_operator[2] => Mux6.IN8
md_operator[2] => Mux7.IN8
sof_reset => ~NO_FANOUT~
result[0] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result.DB_MAX_OUTPUT_PORT_TYPE
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT
show_res => result.OUTPUTSELECT


|switch_calc|segment_display:s1
state[0] => Decoder0.IN2
state[0] => Mux0.IN9
state[0] => Mux1.IN10
state[0] => Mux2.IN10
state[0] => Mux3.IN9
state[0] => Mux4.IN9
state[0] => Mux5.IN9
state[0] => Mux6.IN9
state[0] => Mux7.IN9
state[0] => Mux8.IN9
state[0] => Mux9.IN9
state[0] => Mux10.IN9
state[0] => Mux11.IN10
state[0] => Decoder2.IN1
state[1] => Decoder0.IN1
state[1] => Mux0.IN8
state[1] => Mux1.IN9
state[1] => Mux2.IN9
state[1] => Mux3.IN8
state[1] => Mux4.IN8
state[1] => Mux5.IN8
state[1] => Mux6.IN8
state[1] => Mux7.IN8
state[1] => Mux8.IN8
state[1] => Mux9.IN8
state[1] => Decoder1.IN1
state[1] => Mux10.IN8
state[1] => Mux11.IN9
state[2] => Decoder0.IN0
state[2] => Mux0.IN7
state[2] => Mux1.IN8
state[2] => Mux2.IN8
state[2] => Mux3.IN7
state[2] => Mux4.IN7
state[2] => Mux5.IN7
state[2] => Mux6.IN7
state[2] => Mux7.IN7
state[2] => Mux8.IN7
state[2] => Mux9.IN7
state[2] => Decoder1.IN0
state[2] => Mux10.IN7
state[2] => Mux11.IN8
state[2] => Decoder2.IN0
calcmod => Mux0.IN10
calcmod => Mux3.IN10
calcmod => Mux4.IN10
calcmod => Mux5.IN10
calcmod => Mux6.IN10
calcmod => Mux7.IN10
calcmod => Mux8.IN10
calcmod => Mux9.IN10
calcmod => display_seg.DATAB
calcmod => Mux10.IN10
calcmod => display_seg.DATAB
calcmod => Mux1.IN7
calcmod => Mux2.IN7
calcmod => Mux11.IN7
display_seg[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
display_seg[1] <= Decoder2.DB_MAX_OUTPUT_PORT_TYPE
display_seg[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
display_seg[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
display_seg[4] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
display_seg[5] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE
display_seg[6] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
display_seg[7] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
display_seg[8] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
display_seg[9] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
display_seg[10] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
display_seg[11] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
display_seg[12] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
display_seg[13] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
display_seg[14] <= <VCC>
display_seg[15] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display_seg[16] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display_seg[17] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE
display_seg[18] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
display_seg[19] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display_seg[20] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display_seg[21] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE
display_seg[22] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
display_seg[23] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display_seg[24] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE
display_seg[25] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
display_seg[26] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE
display_seg[27] <= display_seg.DB_MAX_OUTPUT_PORT_TYPE


|switch_calc|clock_divider:c1
CLK => counter_50ms[0].CLK
CLK => counter_50ms[1].CLK
CLK => counter_50ms[2].CLK
CLK => counter_50ms[3].CLK
CLK => counter_50ms[4].CLK
CLK => counter_50ms[5].CLK
CLK => counter_50ms[6].CLK
CLK => counter_50ms[7].CLK
CLK => counter_50ms[8].CLK
CLK => counter_50ms[9].CLK
CLK => counter_50ms[10].CLK
CLK => counter_50ms[11].CLK
CLK => counter_50ms[12].CLK
CLK => counter_50ms[13].CLK
CLK => counter_50ms[14].CLK
CLK => counter_50ms[15].CLK
CLK => counter_50ms[16].CLK
CLK => counter_50ms[17].CLK
CLK => counter_50ms[18].CLK
CLK => counter_50ms[19].CLK
CLK => counter_50ms[20].CLK
CLK => counter_50ms[21].CLK
CLK => counter_50ms[22].CLK
CLK => counter_50ms[23].CLK
CLK => counter_50ms[24].CLK
CLK => counter_50ms[25].CLK
CLK => counter_50ms[26].CLK
CLK => counter_50ms[27].CLK
CLK => clock_out_50ms~reg0.CLK
CLK => counter_1s[0].CLK
CLK => counter_1s[1].CLK
CLK => counter_1s[2].CLK
CLK => counter_1s[3].CLK
CLK => counter_1s[4].CLK
CLK => counter_1s[5].CLK
CLK => counter_1s[6].CLK
CLK => counter_1s[7].CLK
CLK => counter_1s[8].CLK
CLK => counter_1s[9].CLK
CLK => counter_1s[10].CLK
CLK => counter_1s[11].CLK
CLK => counter_1s[12].CLK
CLK => counter_1s[13].CLK
CLK => counter_1s[14].CLK
CLK => counter_1s[15].CLK
CLK => counter_1s[16].CLK
CLK => counter_1s[17].CLK
CLK => counter_1s[18].CLK
CLK => counter_1s[19].CLK
CLK => counter_1s[20].CLK
CLK => counter_1s[21].CLK
CLK => counter_1s[22].CLK
CLK => counter_1s[23].CLK
CLK => counter_1s[24].CLK
CLK => counter_1s[25].CLK
CLK => counter_1s[26].CLK
CLK => counter_1s[27].CLK
CLK => clock_out_1s~reg0.CLK
clock_out_1s <= clock_out_1s~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock_out_50ms <= clock_out_50ms~reg0.DB_MAX_OUTPUT_PORT_TYPE


